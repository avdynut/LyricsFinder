<Window x:Class="Lyrixator.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:views="clr-namespace:Lyrixator.Views"
        xmlns:vm="clr-namespace:Lyrixator.ViewModels"
        Title="Lyrixator"
        d:DataContext="{d:DesignInstance vm:MainWindowViewModel}"
        prism:ViewModelLocator.AutoWireViewModel="True"
        AllowsTransparency="True"
        Background="Transparent"
        FontFamily="{DynamicResource MaterialDesignFont}"
        ResizeMode="CanResizeWithGrip"
        TextElement.FontSize="14"
        TextElement.FontWeight="Medium"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        WindowStyle="None"
        mc:Ignorable="d">

    <Window.Resources>
        <Storyboard x:Key="ShowBackgroundStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             To="1"
                             Duration="0:0:0.3"/>
        </Storyboard>
        <Storyboard x:Key="FadeBackgroundStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             To="0"
                             Duration="0:0:0.5"/>
        </Storyboard>
    </Window.Resources>

    <Grid>
        <tb:TaskbarIcon Name="TrayIcon"
                        IconSource="/music-note.ico"
                        MenuActivation="RightClick"
                        TrayLeftMouseUp="OnTaskbarIconTrayLeftMouseUp">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <Separator/>
                    <MenuItem Click="OnExitClick" Header="Exit"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
            <tb:TaskbarIcon.TrayToolTip>
                <Border Background="{DynamicResource MaterialDesignLightBackground}">
                    <Label Content="Lyrixator"/>
                </Border>
            </tb:TaskbarIcon.TrayToolTip>
        </tb:TaskbarIcon>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Name="TopPanel"
                        Grid.Row="0"
                        Background="{DynamicResource MaterialDesignPaper}">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ShowBackgroundStoryboard}"/>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource FadeBackgroundStoryboard}"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Grid Name="TitleBar" MouseLeftButtonDown="OnTitleBarMouseLeftButtonDown">
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Image Height="16"
                               Margin="2"
                               Source="{Binding PlayerName, Converter={StaticResource NameToIconUriConverter}}"
                               ToolTip="{Binding PlayerName}"/>
                        <Image Height="16"
                               Margin="2"
                               Source="{Binding ProviderName, Converter={StaticResource NameToIconUriConverter}}"
                               ToolTip="{Binding ProviderName}"/>

                        <Separator Width="2"
                                   Height="16"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>

                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Topmost}"
                                      Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                      ToolTip="Topmost">
                            <md:PackIcon Kind="Pin" RenderTransformOrigin=".5,.5">
                                <md:PackIcon.RenderTransform>
                                    <RotateTransform Angle="45"/>
                                </md:PackIcon.RenderTransform>
                            </md:PackIcon>
                            <md:ToggleButtonAssist.OnContent>
                                <md:PackIcon Kind="Pin"/>
                            </md:ToggleButtonAssist.OnContent>
                        </ToggleButton>

                        <Button Height="24"
                                Click="OnSettingsButtonClick"
                                Style="{StaticResource MaterialDesignIconButton}">
                            <md:PackIcon Kind="Settings"/>
                        </Button>

                        <Separator Width="2"
                                   Height="16"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>

                        <Button Padding="8,4"
                                Click="OnMinimizeButtonClick"
                                Content="{md:PackIcon WindowMinimize}"
                                Style="{DynamicResource MaterialDesignFlatButton}"/>
                        <Button Name="MaximizeButton"
                                Padding="8,4"
                                Click="OnMaximizeButtonClick"
                                Content="{md:PackIcon WindowMaximize}"
                                Style="{DynamicResource MaterialDesignFlatButton}"/>
                        <Button Padding="8,4"
                                Click="OnExitClick"
                                Content="{md:PackIcon WindowClose}"
                                Style="{DynamicResource MaterialDesignFlatButton}"/>
                    </StackPanel>
                </Grid>

                <Grid Name="SearchPanel" Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <UniformGrid Grid.Column="0" Rows="2">
                        <TextBox md:HintAssist.Hint="Artist" Text="{Binding Artist, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox md:HintAssist.Hint="Title" Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"/>
                    </UniformGrid>
                    <Button Grid.Column="1"
                            Height="50"
                            Margin="6,0,0,0"
                            md:ButtonProgressAssist.IsIndeterminate="True"
                            md:ButtonProgressAssist.IsIndicatorVisible="{Binding SearchInProgress}"
                            Command="{Binding FindLyricsCommand}"
                            Content="{md:PackIcon Kind=Search,
                                                  Size=24}"
                            IsDefault="True"
                            Style="{DynamicResource MaterialDesignRaisedLightButton}"/>
                </Grid>
            </StackPanel>

            <Grid Name="LyricsPanel" Grid.Row="1">
                <TextBox Name="Lyrics"
                         AcceptsReturn="True"
                         Background="Transparent"
                         BorderThickness="0"
                         FontFamily="{Binding LyricsSettings.FontFamily}"
                         FontSize="{Binding LyricsSettings.FontSize}"
                         FontStyle="{Binding LyricsSettings.FontStyle}"
                         FontWeight="{Binding LyricsSettings.FontWeight}"
                         IsReadOnly="True"
                         MouseDoubleClick="OnLyricsMouseDoubleClick"
                         Style="{x:Null}"
                         Text="{Binding Lyrics}"
                         TextAlignment="{Binding LyricsSettings.TextAlignment}"
                         TextWrapping="Wrap"
                         VerticalScrollBarVisibility="Auto">
                    <TextBox.Foreground>
                        <SolidColorBrush Color="{Binding LyricsSettings.TextColor}"/>
                    </TextBox.Foreground>
                    <TextBox.Effect>
                        <DropShadowEffect BlurRadius="{Binding LyricsSettings.BlurRadius}"
                                          ShadowDepth="{Binding LyricsSettings.ShadowDepth}"
                                          Color="{Binding LyricsSettings.ShadowColor}"/>
                    </TextBox.Effect>
                </TextBox>
            </Grid>

            <Expander Name="TextSettings" Grid.Row="2">
                <views:LyricsSettingsView DataContext="{Binding LyricsSettings}"/>
            </Expander>
        </Grid>
    </Grid>

</Window>
